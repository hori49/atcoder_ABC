# AtCoder ABC Contest #180 C
# 約数列挙のアルゴリズム

"""
[ 問題文 ]
N 個のシュークリームがあります。
シュークリームを分割することなく平等に分けることができるような人数としてあり得るものを全て求めてください。

[ 制約 ]
1 ≤ N ≤ 10^12
N は整数

[ 入力 ]
入力は以下の形式で標準入力から与えられる。
N
"""

# [ 方針 ]
# Nの約数を記録していきroot(N)<(割る数)になったら終了
# なぜ root(N) < i になったら終わりか？
# --> √Nより大きい数で割り切れてもそのペアはすでに記録されているはず。そのため√Nより大きい数での試し割りは不要。
#     (√40=6.32...より大きい8は40を割り切れるが、そのペアである5で割った時、40//5＝8も約数として記録されている)

def main():
    N = int(input())
    lst = []

    i = 1
    while (i**2 <= N):
        if (N % i == 0):
            lst.append(i) # 約数
            if (i != N//i):
                lst.append(N//i) # 重複しない約数
        i += 1

    lst.sort()
    for i in range(len(lst)):
        print(lst[i])


if __name__ == '__main__':
    main()

"""
[ 入力例 1 ]
6

[ 出力例 1 ]
1
2
3
6

[出力例 1 解説] 例えば、2 人で分けるには 1 人あたり 3 個とすればよいです。

[ 入力例 2 ]
720

[ 出力例 2 ]
1
2
3
4
5
6
8
9
10
12
15
16
18
20
24
30
36
40
45
48
60
72
80
90
120
144
180
240
360
720

[ 入力例 3 ]
1000000007

[ 出力例 3 ]
1
1000000007
"""
